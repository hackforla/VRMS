version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.api
      target: api-development
    command: yarn run dev
    volumes:
      - ./backend:/srv/backend
      - backend_node_modules:/srv/backend/node_modules
    expose:
      - "4000"
      - "27017"
    ports:
      - "4000:4000"
      - "27017:27017"
    restart: on-failure
    networks:
      - gateway

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.client
      target: client-development
    command: yarn run start
    volumes:
      - ./client:/srv/client
      - client_node_modules:/srv/client/node_modules
    expose:
      - "3000"
      - "4000"
    ports:
      - "3000:3000"
    stdin_open: true
    restart: on-failure
    networks:
      - gateway

  client-mvp-04:
    build:
      context: ./client-mvp-04
      dockerfile: Dockerfile.client
      target: client-mvp-development
    command: npm run start
    volumes:
      - ./client-mvp-04:/srv/client
      - client-mvp-04_node_modules:/srv/client/node_modules
    expose:
      - "3001"
      - "3002"
      - "4000"
    ports:
      - "3001:3001"
    stdin_open: true
    restart: on-failure
    networks:
      - gateway

  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.nginx
      context: ./nginx
    ports:
      - "8000:80"
      - "8001:81"
    networks:
      - gateway
    depends_on:
      - client
      - client-mvp-04
      - backend

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025 # smtp server
      - 4100:8025 # web ui
    depends_on:
      - client
      - backend
    networks:
      - gateway

networks:
  gateway: {}

volumes:
  client_node_modules:
  client-mvp-04_node_modules:
  backend_node_modules:
